@startuml bigUML
/'
Todo: 
1) Module dependencies e.g. Communication -> Common
2) OperationHandlers
3) GModel

Probleme:
1) Kein Rebinding mehr m√∂glich
'/
hide stereotype
<style>
.contributionPoint {
    BackgroundColor LightBlue
}
.injectionInterface {
    BackgroundColor LightCyan
}
</style>

package "core" {
    class UmlGLSPModule

    package "core.manifest" {
        package "core.manifest.contributions" {
            interface CreateHandlerContribution <<contributionPoint>>
            interface DeleteHandlerContribution <<contributionPoint>>
            interface LabelEditHandlerContribution <<contributionPoint>>
            interface OperationHandlerContribution <<contributionPoint>>
            interface OverrideOperationHandlerContribution <<contributionPoint>>
            interface PaletteContribtuion <<contributionPoint>>
            interface DiagramConfigurationContribution <<contributionPoint>>
        }

        class DiagramManifest
    }

    package "core.gmodel" {
        interface GModelMapper <<injectionInterface>>
        class GModelMapperRegistry
    }

    package "core.handlers.operations" {
        package "core.handlers.operations.create" {
            interface DiagramCreateHandler <<injectionInterface>>
            class DiagramCreateHandlerRegistry
            class UmlCreateEdgeOperationHandler
            class UmlCreateNodeOperationHandler
        }

        /'
        package "core.handlers.operations.delete" {
            interface DiagramDeleteHandler <<injectionInterface>>
            class DiagramDeleteHandlerRegistry
            class UmlDeleteOperationHandler
        }

        package "core.handlers.operations.direct.editing" {
            interface DiagramLabelEditHandler <<injectionInterface>>
            class DiagramLabelEditHandlerRegistry
            class UmlLabelEditOperationHandler
        } 
        '/
        
        class UmlOperationHandlerRegistry
        class UmlOverrideOperationHandlerRegistry
    }

    CreateHandlerContribution ..> DiagramCreateHandler : uses
}

package "features" {
    package "features.outline" {
        package "features.outline.generator" {
            interface DiagramOutlineGenerator <<injectionInterface>>
            interface DefaultOutlineGenerator implements DiagramOutlineGenerator
            class DefaultOutlineGeneratorImpl implements DefaultOutlineGenerator
        }
        package "features.outline.manifest" {
            package "features.outline.manifest.contributions" {
                interface OutlineGeneratorContribution <<contributionPoint>>
            }
            class OutlineManifest
            OutlineManifest ..|> "core.manifest.contributions"
        }
        package "features.outline.actions" {
            class RequestOutlineAction
            class RequestOutlineHandler

            RequestOutlineHandler ..> RequestOutlineAction : handles
            RequestOutlineHandler ..> DiagramOutlineGenerator : uses

        }
    }
}

package "uml" {
    package "uml.handler.operations" {
        package "uml.handler.operations.create" {
            class BaseCreateHandler implements DiagramCreateHandler
            class BaseCreateChildNodeHandler extends BaseCreateHandler
            class BaseCreateEdgeHandler extends BaseCreateHandler
            class BaseCreateNodeHandler extends BaseCreateHandler
        }
    }

    package "uml.gmodel" {
        class BaseGModelMapper implements GModelMapper
    }

    package "uml.communication" {
        package "uml.communication.manifest" {
            class CommunicationUmlManifest extends DiagramManifest

            /'
            CommunicationUmlManifest ..|> "core.manifest.contributions"
            CommunicationUmlManifest ..|> "features.outline.manifest.contributions"
            '/
        } 

        package "uml.communication.gmodel" {
            class InteractionNodeMapper extends BaseGModelMapper
            class LifelineNodeMapper extends BaseGModelMapper
            class MessageNodeMapper extends BaseGModelMapper
        }
        
        package "uml.communication.operations" {
            package "uml.communication.operations.interaction" {
                class CreateInteractionHandler extends BaseCreateNodeHandler
                class DeleteInteractionHandler
                class RenameInteractionHandler
            }
            package "uml.communication.operations.lifeline" {
                class CreateLifelineHandler extends BaseCreateChildNodeHandler
                class DeleteLifelineHandler
                class RenameLifelineHandler
            }
            package "uml.communication.operations.message" {
                class CreateMessageHandler extends BaseCreateEdgeHandler
                class DeleteMessageHandler
                class RenameMessageHandler
            }
        }

        package "uml.communication.features.outline" {
            class CommunicationOutlineGenerator implements DiagramOutlineGenerator
        }

    }
}

@enduml
